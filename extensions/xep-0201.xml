<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Best Practices for Message Threads</title>
  <abstract>This specification defines recommended handling of XMPP message threads.</abstract>
  &LEGALNOTICE;
  <number>0201</number>
  <status>Experimental</status>
  <type>Informational</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>N/A</shortname>
  &stpeter;
  &ianpaterson;
  &ksmith;
  <revision>
    <version>0.6</version>
    <date>2010-05-21</date>
    <initials>psa</initials>
    <remark><p>Simplified several handling rules; removed ThreadID SHIM header for IQ stanzas; removed implementation note about In-Reply-To SHIM header; removed references to XEP-0155; corrected some errors; harmonized text with rfc3921bis in coordination with editor's review.</p></remark>
  </revision>
  <revision>
    <version>0.5</version>
    <date>2008-02-06</date>
    <initials>psa</initials>
    <remark><p>Defined parent attribute and provided recommendations regarding creation of new threads and child threads.</p></remark>
  </revision>
  <revision>
    <version>0.4</version>
    <date>2007-08-30</date>
    <initials>psa</initials>
    <remark><p>Specified handling of thread IDs on groupchat messages.</p></remark>
  </revision>
  <revision>
    <version>0.3</version>
    <date>2007-01-29</date>
    <initials>ip</initials>
    <remark><p>Described handling of unavailable presence and chat messages without thread IDs; minor changes.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2007-01-23</date>
    <initials>psa/ks</initials>
    <remark><p>Equalized treatment of different message types (chat and groupchat not preferred over normal); required the use of UUIDs; specified use of In-Reply-To header; added Kevin Smith as co-author.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2006-12-20</date>
    <initials>psa</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2006-12-14</date>
    <initials>psa</initials>
    <remark>Corrected SHIM example; added XMPP Registrar considerations.</remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2006-12-13</date>
    <initials>psa/ip</initials>
    <remark>First draft.</remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>Although message threads are re-used in XMPP extension protocols such as &xep0085;, the semantics of message threads have never been well specified (e.g., in &rfc3921;). This document attempts to clearly specify the meaning and handling of message threads for implementation by XMPP clients and for potential inclusion in &rfc3921bis;.</p>
</section1>
<section1 topic='Motivation' anchor='motivation'>
  <p>Threads matter because they enable XMPP clients to:</p>
  <ul>
    <li>Track conversation topics within the context of a one-to-one chat session, a &xep0045; room, or exchange of normal messages.</li>
    <li>Restart a conversation from message history.</li>
    <li>Enable clients to distinguish between different conversation threads when presenting a user's message, chat, and groupchat histories, thus providing a more coherent user interface (e.g. by collapsing threads to a single history entry).</li>
    <li>Separate logical sessions from physical interface objects such as windows.</li>
    <li>Route XMPP stanzas within a client (e.g., dispatching different content types to different windows), thus facilitating the creation of more robust plugin architectures.</li>
  </ul>
</section1>
<section1 topic='Definition' anchor='def'>
  <section2 topic='Semantics' anchor='semantics'>
    <p>Section 2.1.2.3 of <cite>RFC 3921</cite> states the following regarding the semantics of the ThreadID:</p>
    <p class='indent'>The &lt;thread/&gt; element contains non-human-readable XML character data specifying an identifier that is used for tracking a conversation thread (sometimes referred to as an "instant messaging session") between two entities....  The value of the &lt;thread/&gt; element MUST be treated as opaque by entities; no semantic meaning may be derived from it, and only exact comparisons may be made against it.</p>
    <p>The description in <cite>RFC 3921</cite> is deemed to be too limiting, since it ignores the potential use of the ThreadID when exchanging message stanzas of types other than "chat". Therefore we propose the following description:</p>
    <p class='indent'>The primary use of the XMPP &lt;thread/&gt; element is to uniquely identify a conversation thread or "chat session" between two entities instantiated by &lt;message/&gt; stanzas of type 'chat'.  However, the XMPP &lt;thread/&gt; element MAY also be used to uniquely identify an analogous thread between two entities instantiated by &lt;message/&gt; stanzas of type 'headline' or 'normal', or among multiple entities in the context of a multi-user chat room instantiated by &lt;message/&gt; stanzas of type 'groupchat'. It may also be used for &lt;message/&gt; stanzas not related to a conversation, such as a game session or an interaction between plugins.  The &lt;thread/&gt; element is not used to identify individual messages, only conversations or messaging sessions.</p>
  </section2>
  <section2 topic='Syntax' anchor='syntax'>
    <p>Section 2.1.2.3 of <cite>RFC 3921</cite> states the following regarding the syntax of the ThreadID:</p>
    <p class='indent'>A message stanza MUST NOT contain more than one &lt;thread/&gt; element.  The &lt;thread/&gt; element MUST NOT possess any attributes....  The &lt;thread/&gt; element MUST NOT contain mixed content (as defined in Section 3.2.2 of XML).</p>
    <p>For the purpose of improved thread handling, we propose defining a 'parent' attribute that enables an application to identify the current thread as an offshoot or child of a previous thread. Therefore we suggest the following syntax definition:</p>
    <p class='indent'>The inclusion of the &lt;thread/&gt; element is OPTIONAL.  Because the &lt;thread/&gt; element uniquely identifies the particular conversation thread to which a message belongs, a message stanza MUST NOT contain more than one &lt;thread/&gt; element.</p>
    <p class='indent'>The &lt;thread/&gt; element MAY possess a 'parent' attribute that identifies another thread of which the current thread is an offshoot or child; the value of the 'parent' attribute MUST conform to the syntax of the &lt;thread/&gt; element itself.</p>
    <p class='indent'>The &lt;thread/&gt; element MUST NOT contain mixed content (as defined in Section 3.2.2 of <xref target="XML"/>).</p>
  </section2>
  <section2 topic='Uniqueness' anchor='unique'>
    <p>Section 2.1.2.3 of <cite>RFC 3921</cite> states the following uniqueness requirement:</p>
    <p class='indent'>The value of the &lt;thread/&gt; element ... MUST be unique to that conversation thread within the stream and MUST be consistent throughout that conversation (a client that receives a message from the same full JID but with a different thread ID MUST assume that the message in question exists outside the context of the existing conversation thread).</p>
    <p>The uniqueness requirement in <cite>RFC 3921</cite> is not deemed strong enough since it is desirable that a ThreadID could be used to (for instance) restart a conversation at a later date. Therefore we propose the following uniqueness requirement:</p>
    <p class='indent'>The value of the &lt;thread/&gt; element is not human-readable and MUST be treated as opaque by entities; no semantic meaning MAY be derived from it, and only exact comparisons may be made against it.  The value of the &lt;thread/&gt; element MUST be a universally unique identifier (UUID) as described in &rfc4122;.</p>
  </section2>
</section1>
<section1 topic='Generation' anchor='generation'>
  <section2 topic='Inclusion' anchor='inclusion'>
    <p>Depending on the type of the message (i.e., the value of the 'type' attribute), the &lt;thread/&gt; should be included as follows:</p>
    <table caption='When to Include Threads'>
      <tr>
        <th>Message Type</th>
        <th>Inclusion</th>
      </tr>
      <tr>
        <td>chat</td>
        <td>RECOMMENDED</td>
      </tr>
      <tr>
        <td>groupchat</td>
        <td>RECOMMENDED</td>
      </tr>
      <tr>
        <td>headline</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>normal</td>
        <td>OPTIONAL</td>
      </tr>
    </table>
  </section2>
  <section2 topic='New Threads' anchor='new'>
    <p>Unless a &lt;message/&gt; stanza is written in direct reply to another &lt;message/&gt; stanza, if a ThreadID is included then its value SHOULD be newly generated when a human user initiates a chat conversation with another user (i.e., a &lt;message/&gt; stanza of type 'chat'), starts a new conversation in the context of a multi-user chat environment (i.e., a &lt;message/&gt; stanza of type 'groupchat'), or sends a normal message.</p>
    <p>If the &lt;message/&gt; stanza is written in direct reply to another &lt;message/&gt; stanza, then the ThreadID SHOULD be the value from the the original &lt;message/&gt; stanza. (Determining what constitutes a &lt;message/&gt; stanza written in reply to another is a matter left to individual implementation, but it is envisaged that in most cases it would be the result of, e.g., the user clicking a 'reply' button when reading the contents of the previous stanza.)</p>
  </section2>
  <section2 topic='Child Threads' anchor='child'>
    <p>In some situations, the conversation veers from the original topic. In this situation, it can be sensible to generate a new thread that is an offshoot or child of the original thread. The connection of the child thread to the parent thread SHOULD be indicated by including the original ThreadID as the value of the 'parent' attribute.</p>
    <example caption='Message with ID'><![CDATA[
<message
    to='romeo@example.net/orchard'
    from='juliet@example.com/balcony'
    id='asiwe8289ljfdalk'
    type='chat'
    xml:lang='en'>
  <body>Art thou not Romeo, and a Montague?</body>
  <thread parent='7edac73ab41e45c4aafa7b2d7b749080'>
    e0ffe42b28561960c6b12b944a092794b9683a38
  </thread>
</message>
    ]]></example>
  </section2>
</section1>
<section1 topic='Handling' anchor='handling'>
  <section2 topic='Chat Messages' anchor='chat'>
    <p>In the context of &lt;message/&gt; stanzas of type "chat" exchanged between two entities, the value of the &lt;thread/&gt; element shall be considered equivalent to a unique identifier for the chat session or conversation thread. If an entity receives such a message with a new or unknown ThreadID, it SHOULD treat the message as part of a session with unnegotiated parameters. A client MAY destroy the thread when it goes offline, but SHOULD NOT destroy the thread if a human user merely disengages from the chat session (e.g., by closing a window in a client interface).</p>
    <p>If an entity receives an XMPP presence stanza of type "unavailable" from the other entity during a chat session, it SHOULD NOT destroy the thread; instead, it SHOULD assume that the other entity will still be able to continue the session (perhaps the other entity was temporarily disconnected by a network error or is persisting the state of the session until it reconnects and receives "offline" messages).</p>
    <p>If an entity receives a message of type "chat" without a thread ID, then it SHOULD create a new session with a new thread ID (and include that thread ID in all the messages it sends within the new session).</p>
  </section2>
  <section2 topic='Groupchat Messages' anchor='groupchat'>
    <p>In the context of &lt;message/&gt; stanzas of type "groupchat" exchanged between multiple entities in a &xep0045; room or similar environment, the value of the &lt;thread/&gt; element shall be considered equivalent to a unique identifier for a conversation thread in the multi-user environment.</p>
    <p>When displaying a threaded groupchat conversation within a user interface, a client SHOULD provide a visual indication of the thread to which a message belongs. Methods for such indications include (non-exhaustively) the grouping together of all messages from the same thread, providing an index of threads, or formatting all messages within a thread in a cohesive manner, e.g. with uniform coloring.</p>
  </section2>
  <section2 topic='Headline Messages' anchor='headline'>
    <p>There are no special handling requirements related to threads in the context of &lt;message/&gt; stanzas of type "headline".</p>
  </section2>
  <section2 topic='Normal Messages' anchor='normal'>
    <p>There are no special handling requirements related to threads in the context of &lt;message/&gt; stanzas of type "normal".</p>
  </section2>
  <section2 topic='Messages That Have Been Archived' anchor='archived'>
    <p>When displaying historical conversations within a user interface, a client SHOULD provide a visual indication of the thread to which a message belongs. Methods for such indications include (non-exhaustively) the grouping together of all messages from the same thread, providing an index of threads, or formatting all messages within a thread in a cohesive manner, e.g. with uniform coloring.</p>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>An application that generates the UUID used as the ThreadID MUST ensure that the UUID does not reveal identifying information about the entity (e.g., the MAC address of the device on which the XMPP application is running).</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>This document requires no interaction with the &REGISTRAR;.</p>
</section1>
</xep>
